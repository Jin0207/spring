
Maven REPosito
Spring Boot Starter AOP
--
	스프링의 주요 특징
	1.DI(Dependency Injection)	==> 객체
		의존성 자동 주입
		==> 어플리케이션에 필요한 객체를 소스코드내에서 직접 new 연산자에 의해 생성하지 않고
			스프링 환경설정이 제공하는 것을 말한다..
			이렇게 하면 수정이 요구되었을 때, 유연하게 대처할 수 있다.
	
	2.AOP (Aspect Oriented Programming)	==> 메소드
	- 관점 지향 프로그래밍
	==> 객체 지향 프로그래밍 ( Object Oriented Programming)하고 다른가?
			다른 것이 아니고 객체지향프로그래밍을 더 객체지향답게 해주주는 것이 관점지향프로그래밍
	
	은행 
			
		==> 기록을 남겨야겠어(언제누가어떤서비스요청ip주소)		
			기록남기는 메소드를 정의해놓고
			잔액조회 --> 메소드 호출
			계좌이체 --> 메소드 호출
			대출신청 --> 메소드 호출
			==> 공통관심사 - 해당메소드
				공통으로 사용하는 메소드를 하나 정의해놓고 같이 사용
			
			공통관심사 메소드에대한 수정이 요청이 되면
			
			
			스프링컨테이너
			
			
			자바로 만들어진 소프트웨어 속을 들여다 보면,
			수많은 클래스들로 구성 되어있다.
			
			사용자 요청에의해 실제로 어떤 일을 수행하기위해서는 메소드가 동작해야한다.
			가령,
			은행의 시스템을 생각해보면
			주요기능(핵심기능)
			--> 잔액조회, 대출신청, 계좌이체 등이 있다.
			
			만약
			사용자가 잔액조회를 누르면
			잔액조회 일처리를 위한 메소드 inquiry()가 동작되고
			
			대출신청을 누르면
			대출신청처리를 위한 메소드 loan()이 동작되고
			
			계좌이체를 누르면
			계죄이체처리를 위한 메소드 transfer()가 동작된다고한다면
			
			각각의 일처리를 위한
			inquiry(), loan(), transfer()는 "핵심관심사항"이라고한다.
			
			만약에
			잔액조회를 하던지, 대출신청을 하던지, 계좌이체를하던지
			서비스를 요청한 시간,서비스명, ip주소 등의 기록을 남겨야한다면
			이러한 기록을 남기는 기능 역시 "메소드"로 만들 수 있다.
			
			각각의 핵심 관심사항 메소드 안에서
			logging() 메소드를 호출할 수 있다.
			
			이러한 메소드를 "공통관심사항"이라고 한다.
			
			만약.
			어떤 고객이 맨처음에는 로깅을 파일로 기록하는 것을 요구했다가
			프로젝트 진행 중 혹은 서비스 중, 로깅을 데이터베이스에 기록하는 것으로 수정을 요구했다면
			공통관심사항인 logging을 위한 메소드를 다시 만들고 이것이 호출된 부분을 일일히 수정해야 할 것이다
			
			이것은 번거로운 일이고
			미처 수정되지 못하는 부분도 있을 수 있다
			
			이것을 스프링 환경설정파일이 대신 해줄 수 있다.
			이것을 AOP라고 한다.
			
			Advice
			공통관심사가 정의된 클래스
			
			JoinPoint
			공통관심사메소드가 호출되는 부분
	
			pointcut
			그런 joinpoint를 여러개 모아놓은것
			메소드 리턴값: void
			
			weaving
			핵심관심사항에 advice가 연결되어잇는것
			
			aspect
			그렇게 구성된 클래스
			aop환경설정입니다.
			

						
			